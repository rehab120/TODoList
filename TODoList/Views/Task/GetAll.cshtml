@model List<Tassk>

@{
    ViewData["Title"] = "To Do App";
}
@{
    var selectedStatus = ViewData["Status"]?.ToString();
}
<style>
    table {
        width: 100%;
        border-collapse: collapse;
        background-color: #f5f5f5;
    }

    th, td {
        padding: 10px;
        border: 1px solid #ccc;
        text-align: center;
    }

    th {
        background-color: #4a148c;
        color: white;
    }

    .status-completed {
        color: green;
        font-weight: bold;
    }

    .status-pending {
        color: orange;
        font-weight: bold;
    }

    .status-timeover {
        color: red;
        font-weight: bold;
    }

    a {
        color: #4a148c;
        text-decoration: none;
        font-weight: bold;
    }

        a:hover {
            text-decoration: underline;
        }

    body {
        font-family: Arial, sans-serif;
    }

    h2 {
        color: #4a148c;
    }
</style>

<h2>@ViewData["Title"]</h2>

<form method="get" action="/Task/Filter" class="d-flex justify-content-end align-items-center mb-4 pt-2 pb-3">
    <p class="small mb-0 me-2 text-muted">Filter</p>
    <select name="status" class="form-select" style="width: 200px;" onchange="this.form.submit()">
        <option value="">Selected</option>
        <option value="All" @@(selectedStatus=="All" ? "selected" : "" )>All</option>
        <option value="Pending" @@(selectedStatus=="Pending" ? "selected" : "" )>Pending</option>
        <option value="Completed" @@(selectedStatus=="Completed" ? "selected" : "" )>Completed</option>
        <option value="TimeOver" @@(selectedStatus=="TimeOver" ? "selected" : "" )>TimeOver</option>
    </select>
</form>

<table>
    <thead>
        <tr>
            <th>#</th>
            <th>Title</th>
            <th>Description</th>
            <th>Status</th>
            <th>Date</th>
            <th>Is Done</th>
            @* <th>User ID</th> *@
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @for (int i = 0; i < Model.Count; i++)
        {
            var task = Model[i];
            var statusClass = task.Status == Status.Completed ? "status-completed"
            : task.Status == Status.TimeOver ? "status-timeover"
            : "status-pending";

            <tr>
                <td>@(i + 1)</td>
                <td>@task.Title</td>
                <td>@task.Description</td>
                <td class="@statusClass">@task.Status</td>
                <td>@task.Date.ToString("yyyy-MM-dd HH:mm")</td>
                <td>@(task.IsDone ? "✓" : "✗")</td>
                @* <td>@task.User_id</td> *@
                <td>
                    <a href="/Task/Delete/@task.Id" data-id="@task.Id">Delete</a> |
                    @* <a href="/Task/Finished/@task.Id">Finished</a> *@
                    <a href="/Task/Finished/@task.Id">Finished</a> |
                    <a href="/Task/Edit/@task.Id">Edit</a>
                </td>
            </tr>
        }
    </tbody>
</table>
<div class="d-flex justify-content-end mt-4">
    <a href="/Task/Add">
        <button type="button" background-color: #4a148c>Add New Task</button>
    </a>
</div>
<style>
    .btn-custom {
        background-color: #4a148c; /* بنفسجي غامق */
        color: white;
        border: none;
        padding: 10px 20px;
        border-radius: 8px;
        font-weight: bold;
        transition: background-color 0.3s ease, transform 0.2s ease;
    }

        .btn-custom:hover {
            background-color: #6a1b9a; /* بنفسجي أفتح شوية */
            transform: scale(1.05);
        }
</style>

